{"ast":null,"code":"var _jsxFileName = \"/home/nakador/PFA/craftiny/src/components/Articles/ShowArticle/CommentSection/CommentSection.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport moment from 'moment';\nconst {\n  TextArea\n} = Input;\n\nconst CommentList = ({\n  comments\n}) => /*#__PURE__*/React.createElement(List, {\n  dataSource: comments,\n  header: `${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`,\n  itemLayout: \"horizontal\",\n  renderItem: props => /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 26\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n});\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, \"Add Comment\")));\n\nconst CommentSection = props => {\n  const [Comments, setComments] = useState([]);\n  const [Value, setValue] = useState('');\n  const [Submitting, setSubmitting] = useState(false);\n\n  const handleSubmit = () => {\n    if (!Value) {\n      return;\n    }\n\n    setSubmitting(true);\n    setTimeout(() => {\n      setSubmitting(false);\n      setValue('');\n      setComments([{\n        author: 'Han Solo',\n        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        content: /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 24\n          }\n        }, this.state.value),\n        datetime: moment().fromNow()\n      }, ...Comments]);\n    }, 1000);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const {\n    comments,\n    submitting,\n    value\n  } = this.state;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["/home/nakador/PFA/craftiny/src/components/Articles/ShowArticle/CommentSection/CommentSection.js"],"names":["React","useState","Comment","Avatar","Form","Button","List","Input","moment","TextArea","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","CommentSection","Comments","setComments","Value","setValue","Submitting","setSubmitting","handleSubmit","setTimeout","author","avatar","content","state","datetime","fromNow","handleChange","e","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport moment from 'moment';\n\nconst { TextArea } = Input;\n\nconst CommentList = ({ comments }) => (\n  <List\n    dataSource={comments}\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => <Comment {...props} />}\n  />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} />\n    </Form.Item>\n    <Form.Item>\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n        Add Comment\n      </Button>\n    </Form.Item>\n  </>\n);\n\nconst CommentSection = (props) => {\n\n    const [Comments, setComments] = useState([]);\n    const [Value, setValue] = useState ('');\n    const [Submitting, setSubmitting] = useState(false);\n\n\n\n\n  const handleSubmit = () => {\n    if (!Value) {\n      return;\n    }\n\n    setSubmitting(true);\n\n    setTimeout(() => {\n        setSubmitting(false);\n        setValue('');\n        setComments([\n            {\n              author: 'Han Solo',\n              avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n              content: <p>{this.state.value}</p>,\n              datetime: moment().fromNow(),\n            },\n            ...Comments,\n          ]);\n    }, 1000);\n  };\n\n  const handleChange = e => {\n      setValue(e.target.value);\n  };\n\n    const { comments, submitting, value } = this.state;\n\n    return (\n      <>\n        {comments.length > 0 && <CommentList comments={comments} />}\n        <Comment\n          avatar={\n            <Avatar\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Editor\n              onChange={handleChange}\n              onSubmit={handleSubmit}\n              submitting={submitting}\n              value={value}\n            />\n          }\n        />\n      </>\n    );\n  \n}\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}